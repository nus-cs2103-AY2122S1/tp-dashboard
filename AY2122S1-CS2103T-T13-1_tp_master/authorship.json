[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"NUS ModBook","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"SHEZADHASSAN22"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"NUS ModBook is a **desktop app for managing modules, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ModBook can help you organise modules faster than traditional GUI apps.","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"SHEZADHASSAN22":1,"-":3,"rohit0718":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"### Isaac Lee","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"\u003cimg src\u003d\"images/luminousleek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"[[github](https://github.com/luminousleek)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"### Shezad Hassan","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SHEZADHASSAN22"},"content":"\u003cimg src\u003d\"images/shezadhassan22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SHEZADHASSAN22"},"content":"[[github](https://github.com/shezadhassan22)]","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SHEZADHASSAN22"},"content":"* Role: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"### Rohit Rajesh Bhat","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"\u003cimg src\u003d\"images/rohit0718.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"[[github](https://github.com/rohit0718)]","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"### TAN JUN RONG, BENJAMIN","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"\u003cimg src\u003d\"images/bentanjunrong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"[[github](https://github.com/bentanjunrong)]","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"### Benjamin Lim","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"\u003cimg src\u003d\"images/itzblim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"[[github](https://github.com/itzblim)]","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luminousleek":3,"SHEZADHASSAN22":4,"itzblim":4,"bentanjunrong":4,"-":32,"rohit0718":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"rohit0718"},"content":"**Target user profile:**","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"rohit0718"},"content":"* has a need to manage modules and lessons related to the modules","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"rohit0718"},"content":"**Value proposition**: manage modules faster NUSMods","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"rohit0718"},"content":"| Priority | As a...     | I want to...                        | So that I can                                          |","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"rohit0718"},"content":"| -------- | ----------- | ----------------------------------- | ------------------------------------------------------ |","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| `***`    | new user    | see usage instructions              | refer to instructions when I forget how to use the App |","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add modules to a module list            | keep track of my daily schedule                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my modules             | update changes in my curriculum plan                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete modules  | update any withdrawal from modules  |","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of my modules | have an overview of all my schoolwork |","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add lessons to a lesson list | keep track of my lesson schedule   |","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my lessons             | update changes in the lesson schedule                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete my lessons             | update if any lessons are cancelled                |","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of upcoming lessons      | plan my week ahead                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add examinations to a examination list | keep track of my examination schedule   |","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my examinations  | update any changes in the examinations  |","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete my examinations | update if any examinations are cancelled   |","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of upcoming examinations | plan my revision nearing the examination period        |","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"rohit0718"},"content":"(For all use cases below, the **System** is the `ModBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"rohit0718"},"content":"**Use case: Add a module**","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"rohit0718"},"content":"1. User types in code and name of module","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds that module into the list","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added module","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"rohit0718"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"rohit0718"},"content":"**Use case: Add a lesson**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"rohit0718"},"content":"1. User types in module code, day of week, start time, end time, and optionally link and venue details","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds the lesson to the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Extensions**  ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"rohit0718"},"content":"**Use case: Add an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"rohit0718"},"content":"**MSS**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"rohit0718"},"content":"1. User types in exam code, name, time and optionally link and venue","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds the exam to the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added exam","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"rohit0718"},"content":"**Use case: List all modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"rohit0718"},"content":"**Use case: List all lessons across modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all lessons","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all lessons, sorted by Day and Time","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"rohit0718"},"content":"**Use case: List all exams across modules**","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all exams","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all exams, sorted by Date and Time","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"rohit0718"},"content":"**Use case: List lessons and exams for one module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"rohit0718"},"content":"1. User requests to see list of all lessons and exams of the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all Exams and Lessons of the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1","lastModifiedDate":"2021-09-29"},{"lineNumber":391,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":392,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete a module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":393,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete a module","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":397,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":398,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":399,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":400,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":401,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":402,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":405,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete a lesson**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":407,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":408,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete a lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":410,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete an exam associated with a module","lastModifiedDate":"2021-09-29"},{"lineNumber":418,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":424,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":426,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":427,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit a module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":429,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":430,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit a module","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"rohit0718"},"content":"2. ModBook edits the module at the specified index","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit a lesson**","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit a lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"rohit0718"},"content":"2. Modbook edits the lesson and returns success message","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":450,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":455,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":458,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":459,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit an exam","lastModifiedDate":"2021-09-29"},{"lineNumber":460,"author":{"gitId":"rohit0718"},"content":"2. ModBook edits the exam and returns success message","lastModifiedDate":"2021-09-29"},{"lineNumber":461,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":463,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":464,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":465,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":468,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"rohit0718"},"content":"**Use case: Display help**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":472,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"rohit0718"},"content":"1. User requests for help","lastModifiedDate":"2021-09-29"},{"lineNumber":474,"author":{"gitId":"rohit0718"},"content":"2. ModBook presents a link to a help page","lastModifiedDate":"2021-09-29"},{"lineNumber":475,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":476,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":477,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":478,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":479,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":480,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":481,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":482,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"rohit0718"},"content":"**Use case: Clear all modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":485,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":486,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":487,"author":{"gitId":"rohit0718"},"content":"1. User requests to clear all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":488,"author":{"gitId":"rohit0718"},"content":"2. ModBook clears all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":489,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":490,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":491,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":492,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":493,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":494,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":495,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":496,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":497,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":498,"author":{"gitId":"rohit0718"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-09-29"},{"lineNumber":499,"author":{"gitId":"rohit0718"},"content":"1. Should work on any *mainstream OS* as long as it has **`Java 11`** or above installed.","lastModifiedDate":"2021-09-29"},{"lineNumber":500,"author":{"gitId":"rohit0718"},"content":"1. Should be able to hold up to 1000 modules without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-29"},{"lineNumber":501,"author":{"gitId":"rohit0718"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-29"},{"lineNumber":502,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":503,"author":{"gitId":"rohit0718"},"content":"### Glossary","lastModifiedDate":"2021-09-29"},{"lineNumber":504,"author":{"gitId":"rohit0718"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2021-09-29"},{"lineNumber":505,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luminousleek":9,"-":351,"rohit0718":196}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"NUS ModBook is a **desktop app for managing modules, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ModBook can help you organise modules faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"## Table of Contents","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"1. [Quick Start](#Quick-start)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"1. [Features](#Features)","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    * [Modules](#Modules)","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        * [Adding a module](#Adding-a-module-add-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        * [Listing all modules](#Listing-all-modules--list-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        * [Show details of a module](#Show-details-of-a-module-detail)","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        * [Editing a module](#Editing-a-module-edit-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a module](#Delete-a-module-delete-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    * [Lessons](#Lessons)","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        * [Adding a lesson](#Adding-a-lesson-add-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        * [Listing all lessons](#Listing-all-lessons--list-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        * [Editing a lesson](#Editing-a-lesson-edit-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a lesson](#Deleting-a-lesson-delete-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    * [Exams](#Exams)","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"        * [Adding an exam](#Adding-an-exam-add-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"        * [Listing all exam](#Listing-all-Exams-list-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"        * [Editing an exam](#Editing-an-Exam-edit-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a exam](#Deleting-an-Exam--delete-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    * [Miscellaneous](#Miscellaneous)","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        * [Viewing help](#Viewing-help--help)","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        * [Clearing all entries](#Clearing-all-entries--clear)","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        * [Exiting the program](#Exiting-the-program--exit)","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        * [Saving the data](#Saving-the-data)","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        * [Editing the data file](#Editing-the-data-file)","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"1. [FAQ](#FAQ)","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"1. [Command Summary](#Command-Summary)","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"    * [By Action](#Command-Summary-by-Action)","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"    * [By Object](#Command-Summary-by-Object)","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"## Quick Start","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"1. Download the latest modbook.jar from here.","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"1. Copy the file to the folder you want to use as the home folder for your ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"1. Try out some example commands:","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"* `list mod`: Lists all modules.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"* `add mod c/CS2103T n/Software Engineering`: Adds a module with code CS2103T, named Software Engineering.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"* `delete mod 1`: Deletes the 1st module shown in the module list.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"* `clear`: Deletes all modules.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"* `exit`: Exits the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"1. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"#### Notes about the command format:","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"  e.g. in add `c/CODE`, `CODE` is a parameter which can be used as `add mod c/CS2103T`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"  e.g `c/CODE [n/NAME]` can be used as `c/CS2103T` or as `c/CS2103T n/Software Engineering`.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"* Parameters can be in any order.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"  e.g. if the command specifies `c/CODE n/NAME`, `n/NAME c/CODE` is also acceptable.","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"### Modules","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"#### Adding a module: `add mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"Adds a module to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"Format: `add mod c/CODE [n/NAME]`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"* Example: `add mod c/CS2103T n/Software Engineering` : Adds a module with code CS2103T, named Software Engineering.","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"#### Listing all modules : `list mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"Shows a list of all modules in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"Format: `list mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"#### Show details of a module: `detail`","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"Show details of an existing module in the ModBook. A list of all Lessons and Exams of the specified Module is printed.","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"Format: `detail c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"* Example: `detail c/CS2103T` : Shows details for the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"#### Editing a module: `edit mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"Edits an existing module in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"Format: `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"* Edits the module at the specified `INDEX`. The index refers to the index number shown in the displayed module list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"  `edit mod 1 c/CS2105 n/Computer Networks` : Edits the name of the CS2105 module to Computer Networks","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"#### Delete a module: `delete mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"Deletes a module from the ModBook","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"Format: `delete mod INDEX`","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"* Deletes the person at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"  Examples: `delete mod 2` : deletes the 2nd module in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"### Lessons","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"#### Adding a lesson: `add lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"Adds a lesson to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"Format: `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"rohit0718"},"content":"  `add lesson c/CS2103T n/Weekly Tutorial d/Monday s/1000 e/1100 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1`: Adds a lesson to the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"rohit0718"},"content":"#### Listing all lessons : `list lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"rohit0718"},"content":"Shows a list of all lessons in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"rohit0718"},"content":"Format: `list lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"rohit0718"},"content":"#### Editing a lesson: `edit lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"rohit0718"},"content":"Edits a lesson to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"rohit0718"},"content":"Format: `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"rohit0718"},"content":"* `edit lesson 2 c/CS2103T n/Weekly Tutorial d/Monday s/1000 e/1100 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1` : Edits the second lesson of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"rohit0718"},"content":"#### Deleting a lesson: `delete lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"rohit0718"},"content":"Deletes a lesson from the ModBook","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"rohit0718"},"content":"Format: `delete lesson INDEX c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"rohit0718"},"content":"* Deletes the lesson at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed module detail list.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"rohit0718"},"content":"* `delete lesson 2 c/CS2103T`: deletes the 2nd lesson of the CS2130T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"rohit0718"},"content":"### Exams","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"rohit0718"},"content":"#### Adding an exam: `add exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"rohit0718"},"content":"Adds an exam to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"rohit0718"},"content":"Format: `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"rohit0718"},"content":"  `add exam c/CS2103T n/Final Exam d/31/12/2022 s/2100 e/2200 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1`: Adds an exam to the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"rohit0718"},"content":"#### Listing all Exams : `list exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"rohit0718"},"content":"Shows a list of all lessons in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"rohit0718"},"content":"Format: `list exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"rohit0718"},"content":"#### Editing an Exam: `edit exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"rohit0718"},"content":"Edits an exam to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"rohit0718"},"content":"Format: `edit exam 3 c/CODE n/NEW_NAME d/NEW_DATE s/NEW_START_TIME e/NEW_END_TIME [l/NEW_LINK] [v/NEW_VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"rohit0718"},"content":"  `edit exam 3 c/CS2103T n/Final Exam d/31/12/2022 s/2100 e/2200 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1` : Edits the 3rd exam of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"rohit0718"},"content":"#### Deleting an Exam : `delete exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"rohit0718"},"content":"Deletes the specified Exam from the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"rohit0718"},"content":"Format: `delete exam INDEX c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"rohit0718"},"content":"* Deletes the Exam at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed Module details list.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"rohit0718"},"content":"  `delete exam 3 c/CS2103T` : Deletes the 3rd exam of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"rohit0718"},"content":"### Miscellaneous","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"rohit0718"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"rohit0718"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"rohit0718"},"content":"Format: `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"rohit0718"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"rohit0718"},"content":"Clears all entries from the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"rohit0718"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"rohit0718"},"content":"#### Saving the data","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"rohit0718"},"content":"ModBook data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"rohit0718"},"content":"#### Editing the data file","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"rohit0718"},"content":"ModBook data is saved as a JSON file `[JAR file location]/data/modbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"rohit0718"},"content":"Caution: If your changes to the data file makes its format invalid, ModBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"rohit0718"},"content":"**Q**:   How do I transfer my data to another Computer?","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"rohit0718"},"content":"**A**:   Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ModBook home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"rohit0718"},"content":"## Command Summary","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"rohit0718"},"content":"### Command Summary by Action","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"rohit0718"},"content":"| Action | Object | Format, Examples                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"rohit0718"},"content":"|--------|--------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"rohit0718"},"content":"| Add    | Module | `add mod c/CODE [n/NAME]`                                                                                                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"rohit0718"},"content":"| List   | Module | `list mod`                                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `list lesson`                                                                                                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `list exam`                                                                                                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"rohit0718"},"content":"| Detail | Module | `detail c/CODE`                                                                                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"rohit0718"},"content":"| Delete | Module | `delete mod INDEX`                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `delete lesson INDEX c/CODE`                                                                                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `delete exam INDEX c/CODE`                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"rohit0718"},"content":"| Edit   | Module | `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]` |","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `edit exam INDEX c/CODE [n/NEW_NAME] [d/NEW_DATE] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`          |","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"rohit0718"},"content":"| Help   |        | `help`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"rohit0718"},"content":"| Clear  |        | `clear`                                                                                                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"rohit0718"},"content":"| Exit   |        | `exit`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"rohit0718"},"content":"### Command Summary by Object","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"rohit0718"},"content":"| Object | Action | Format, Examples                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"rohit0718"},"content":"|--------|--------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"rohit0718"},"content":"| Module | Add    | `add mod c/CODE [n/NAME]`                                                                                                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"rohit0718"},"content":"|        | Detail | `detail c/CODE`                                                                                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list mod`                                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete mod INDEX`                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"rohit0718"},"content":"| Lesson | Add    | `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list lesson`                                                                                                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]` |","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete lesson INDEX c/CODE`                                                                                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"rohit0718"},"content":"| Exam   | Add    | `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list exam`                                                                                                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit exam INDEX c/CODE [n/NEW_NAME] [d/NEW_DATE] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`          |","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete exam INDEX c/CODE`                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"rohit0718"},"content":"| Help   |        | `help`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"rohit0718"},"content":"| Clear  |        | `clear`                                                                                                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"rohit0718"},"content":"| Exit   |        | `exit`                                                                                                                     |","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"-":21,"rohit0718":184}},{"path":"src/main/java/seedu/address/model/module/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHEZADHASSAN22"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"SHEZADHASSAN22"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"SHEZADHASSAN22"},"content":" * Represents a link in the ModBook.","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"SHEZADHASSAN22"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"SHEZADHASSAN22"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"SHEZADHASSAN22"},"content":"public class Link {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Link can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /*","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * The first character of the link must not be a whitespace,","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public final String link;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Constructs a {@code Link}.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"SHEZADHASSAN22"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * @param link A link.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public Link(String link) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"SHEZADHASSAN22"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"SHEZADHASSAN22"},"content":"        checkArgument(isValidLink(link), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"SHEZADHASSAN22"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Returns true if a given string is a valid link.","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return this.link;","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"SHEZADHASSAN22"},"content":"                || (other instanceof Link // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"SHEZADHASSAN22"},"content":"                \u0026\u0026 link.equals(((Link) other).link)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return link.hashCode();","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"SHEZADHASSAN22"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"SHEZADHASSAN22":56}}]
